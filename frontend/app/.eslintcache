[{"/home/darentang/projects/real-life-among-us/frontend/app/src/components/EndGame.js":"1","/home/darentang/projects/real-life-among-us/frontend/app/src/index.js":"2","/home/darentang/projects/real-life-among-us/frontend/app/src/App.js":"3","/home/darentang/projects/real-life-among-us/frontend/app/src/utilities/socket-context.js":"4","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Console.js":"5","/home/darentang/projects/real-life-among-us/frontend/app/src/utilities/lobbies.js":"6","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Vote.js":"7","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Game.js":"8","/home/darentang/projects/real-life-among-us/frontend/app/src/reportWebVitals.js":"9","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Login.js":"10","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Dev.js":"11","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Lobby.js":"12","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Connect.js":"13"},{"size":1640,"mtime":1608726910467,"results":"14","hashOfConfig":"15"},{"size":555,"mtime":1608470147241,"results":"16","hashOfConfig":"15"},{"size":3243,"mtime":1608707478382,"results":"17","hashOfConfig":"15"},{"size":102,"mtime":1608120293638,"results":"18","hashOfConfig":"15"},{"size":16832,"mtime":1608986662382,"results":"19","hashOfConfig":"15"},{"size":27893,"mtime":1608989414349,"results":"20","hashOfConfig":"15"},{"size":4122,"mtime":1608441613290,"results":"21","hashOfConfig":"15"},{"size":18920,"mtime":1608989695891,"results":"22","hashOfConfig":"15"},{"size":362,"mtime":1607673413988,"results":"23","hashOfConfig":"15"},{"size":7005,"mtime":1608692686353,"results":"24","hashOfConfig":"15"},{"size":5805,"mtime":1608722401939,"results":"25","hashOfConfig":"15"},{"size":4286,"mtime":1608430632550,"results":"26","hashOfConfig":"15"},{"size":3259,"mtime":1608988645613,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"8efhwh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/darentang/projects/real-life-among-us/frontend/app/src/components/EndGame.js",["64"],"import React, {useState, useEffect} from 'react';\nimport Container from 'react-bootstrap/esm/Container';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nimport { useHistory } from \"react-router-dom\";\n\nfunction EndGame() {\n    const [info, setInfo] = useState({who: '', imposters: [], success: false})\n    const [success, setSuccess] = useState(false);\n    const history = useHistory();\n    useEffect(() => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({})\n        };\n\n        fetch(sessionStorage.getItem('api-host')+'api/who_won', requestOptions).then(response => response.json()).then((data)=>{\n            console.log(data);\n            if (data.success) {\n                setSuccess(true);\n                setInfo(data);\n            } else {\n                history.push('/');\n            }\n        })\n    }, []);\n    return (\n        <Container>\n            <Jumbotron>\n                {success &&\n                    <div>\n                        <h1>This is the End!</h1>\n        \n                        <p>The {info.who} won. </p>\n                        <p>The imposters are {info.imposters.join(',')}</p>\n                        <Button onClick={()=>history.push('/')}>\n                            Return\n                        </Button>\n                    </div>\n                }\n                {!success &&\n                    <h1>Oops the game has not ended.</h1>\n                }\n            </Jumbotron>\n        </Container>\n    );\n}\n\nexport default EndGame;","/home/darentang/projects/real-life-among-us/frontend/app/src/index.js",[],["65","66"],"/home/darentang/projects/real-life-among-us/frontend/app/src/App.js",["67","68"],"\nimport React, {useEffect, useState} from \"react\";\nimport Login from './components/Login.js'\nimport Lobby from './components/Lobby.js'\nimport Console from './components/Console.js'\nimport Game from './components/Game.js'\nimport Dev from './components/Dev.js'\nimport Vote from './components/Vote.js'\nimport EndGame from './components/EndGame.js'\nimport Connect from './components/Connect.js'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\n\nimport SocketContext from './utilities/socket-context.js';\nimport io from 'socket.io-client';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [socket, setSocket] = useState(null);\n  const [address, setAddress] = useState(null);\n\n  const history = useHistory();\n  \n\n  useEffect(() => {\n    if (sessionStorage.getItem('api-host') != null) {\n      setSocket(io(sessionStorage.getItem('api-host')));\n      console.log('connecting', socket);\n    } \n  }, [address]);\n\n  const logoutCallback = () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({class: 'player', token: sessionStorage.getItem('game-token')})\n    };\n\n    fetch(sessionStorage.getItem('api-host')+'api/delete', requestOptions);\n      \n    sessionStorage.removeItem('game-token');\n    sessionStorage.removeItem('api-host');\n    \n    window.location.href = \"/\";\n  }\n\n\n  return (\n    <div>\n    <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\">\n        <Navbar.Brand>Imposter Tang</Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n            {(sessionStorage.getItem('api-host') == null) &&\n              <Navbar.Text>\n              Not Connected\n              </Navbar.Text>\n            }\n            {(sessionStorage.getItem('api-host') != null) &&\n              <div>\n                <Navbar.Text style={{'marginRight': '2vh'}}>\n                  Connected\n                </Navbar.Text>\n                <Button size=\"sm\" variant=\"secondary\" onClick={logoutCallback}>\n                  Logout\n                </Button>\n              </div>\n            }\n        </Navbar.Collapse>\n    </Navbar>\n    <div className=\"main\">\n      {(sessionStorage.getItem('api-host') == null) &&\n        <Connect setAddress={setAddress} />\n      }\n      {(sessionStorage.getItem('api-host') != null && socket != null) &&\n      <SocketContext.Provider value={socket}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Login />\n              </Route>\n              <Route path=\"/lobby\">\n                <Lobby />\n              </Route>\n              <Route path=\"/game\">\n                <Game />\n              </Route>\n              <Route path=\"/console\">\n                <Console />\n              </Route>\n              <Route path=\"/dev\">\n                <Dev />\n              </Route>\n              <Route path=\"/vote\">\n                <Vote />\n              </Route>\n              <Route path=\"/end\">\n                <EndGame />\n              </Route>\n            </Switch>\n          </Router>\n        </SocketContext.Provider>\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["69","70"],"/home/darentang/projects/real-life-among-us/frontend/app/src/utilities/socket-context.js",[],"/home/darentang/projects/real-life-among-us/frontend/app/src/components/Console.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"/home/darentang/projects/real-life-among-us/frontend/app/src/utilities/lobbies.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"/home/darentang/projects/real-life-among-us/frontend/app/src/components/Vote.js",["121","122","123","124","125","126","127","128","129"],"import React, { useEffect, useState, useContext } from \"react\";\n// import io from 'socket.io-client';\nimport io from 'socket.io-client';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {PlayerVote, Timer} from \"../utilities/lobbies.js\"\nimport SocketContext from '../utilities/socket-context'\n\nfunction Vote() {\n    const [tally, setTally] = useState({tally: [], meeting_state: 'discussion'});\n    const [profile, setProfile] = useState({is_imposter: false, imposter_list: [], username: ''});\n    const [disable, setDisable] = useState(false);\n    const [showResults, setShowResults] = useState(false);\n    const [result, setResult] = useState('');\n\n    const handleClose = () => setShowResults(false);\n\n    const token = sessionStorage.getItem('game-token');\n    const history = useHistory();\n\n    // no token then return to homepage\n    if (token == null) {\n        history.push('/');\n    }\n\n    // let socket;\n    const socket = useContext(SocketContext);\n\n    useEffect(()=> {\n        socket.on('end meeting message', (data) => {\n            setShowResults(true);\n            setResult(data.message);\n        })\n    });\n    \n    useEffect(() => {\n        // send a go online signal and request user list\n        socket.emit(\"go online\", {token: token, class: 'player', id:-1});\n\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({token: token})\n        };\n\n        fetch(sessionStorage.getItem('api-host')+'api/player_profile', requestOptions).then(response => response.json()).then((data) => {\n            setProfile(data);\n            if (!data.success) {\n                console.log('pushing lobby');\n                history.push('/lobby');\n            }\n\n            if (data.game_state != \"meeting\") {\n                console.log('pushing game 1');\n                history.push('/game');\n            }\n        });\n    }, []);    \n\n    useEffect(() => {\n        // when receiving a lobby list, update playerList state.\n        // If not successful, return to home page.\n        socket.on(\"meeting update\", (data) => {\n            setTally(data);\n            if (data.meeting_state != 'vote') {\n                setDisable(true);\n            } else {\n                setDisable(false);\n            }\n        });\n        for (var i in tally.tally) {\n            if (tally.tally[i].id == profile.id && tally.tally[i].vote_for != null) {\n                setDisable(true);\n            }\n        }\n\n    });\n\n\n    useEffect(() => {\n        if (socket){\n            socket.on('change state', (data) => {\n                if (data.state == 'game'){\n                    console.log('pushing game 2');\n                    history.push('/game');\n                }\n\n            });\n        }\n    });\n\n\n    return(\n        <Container>\n            {(tally.meeting_state == \"start\") &&\n                <Jumbotron>\n                    <h1>Waiting for meeting to start...</h1>\n                </Jumbotron>\n            }\n            {(tally.meeting_state != \"start\") &&\n    \n                <Container>\n                    <Timer socket={socket} tally={tally}/>\n                    <PlayerVote tally={tally} selfName={profile.username} token={token} disable={disable}/>\n                </Container>\n            }\n\n            <Modal show={showResults} onClose={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Result\n                    </Modal.Title>\n                    </Modal.Header>\n                        <Modal.Body>\n                            {result}\n                        </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Ok\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    );\n}\n\n\nexport default Vote;","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Game.js",["130","131","132","133","134","135","136","137","138","139"],"/home/darentang/projects/real-life-among-us/frontend/app/src/reportWebVitals.js",[],["140","141"],"/home/darentang/projects/real-life-among-us/frontend/app/src/components/Login.js",["142","143","144","145","146","147"],"import React, { useEffect, useState, useContext } from \"react\";\n\n// boostrap components\nimport Container from 'react-bootstrap/Container'\nimport Jumotron from 'react-bootstrap/Jumbotron'\nimport Form from 'react-bootstrap/Form'\nimport FormGroup from 'react-bootstrap/FormGroup'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\n\nimport {useForm} from 'react-hook-form';\n\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\n// Login Page\nfunction Login() {\n    // state variables\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [inputMode, setInputMode] = useState(\"1\");\n\n    const {register, handleSubmit} = useForm();\n\n    const radios = [\n        {name: 'User', value:'1'},\n        {name: 'Console', value:'2'}\n    ];\n\n\n    // Open and close handles\n    const handleClose = () => setShowError(false);\n    const handleOpen = () => setShowError(true);\n\n    const history = useHistory();\n    const token = sessionStorage.getItem('game-token');\n\n\n\n\n    // submit username\n    const onSubmitUsername = (data) => {\n        // request options\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({username: data.username})\n        };\n\n        // send request to api\n        fetch(sessionStorage.getItem('api-host')+'api/add_user', requestOptions).then(response => response.json()).then(\n            data => {\n                console.log('HTTP POST SENT and RECIEVED'); \n                // if successful, save usertoken as cookie\n                if (data.success) {\n                    sessionStorage.setItem('game-token', data.token);\n                    sessionStorage.setItem('game-type', 'player');\n                    // redirect to lobby\n                    history.push('/lobby');\n                }\n                // else, open the modal\n                else {\n                    handleOpen();\n                    setErrorMessage(data.reason);\n                }\n            }\n        );\n    };\n\n    const onSubmitConsole = (data) => {\n        // request options\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({location: data.location, type: data.type})\n        };\n\n        // send request to api\n        fetch(sessionStorage.getItem('api-host')+'api/add_console', requestOptions).then(response => response.json()).then(\n            data => {\n                console.log('HTTP POST SENT and RECIEVED'); \n                // if successful, save usertoken as cookie\n                if (data.success) {\n                    sessionStorage.setItem('game-token', data.token);\n                    sessionStorage.setItem('game-type', 'console');\n                    // redirect to lobby\n                    history.push('/console');\n                }\n                // else, open the modal\n                else {\n                    handleOpen();\n                    setErrorMessage(data.reason);\n                }\n            }\n        );\n    };\n\n    useEffect(()=>{\n        if (token != null) {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({token: token})\n            };\n    \n            fetch(sessionStorage.getItem('api-host')+'api/player_profile', requestOptions).then(response => response.json()).then((data) => {\n                if (data.success) {\n                    if (data.type == 'player') {\n                        history.push('/lobby');\n                    } else if  (data.type == 'console'){\n                        history.push('/console');\n                    }\n                }\n            });\n        }\n    }, [])\n\n    useEffect(()=>{console.log('Input mode ' + inputMode);}, [inputMode]);\n\n\n    const playerForm = (\n        <Form onSubmit={handleSubmit(onSubmitUsername)}>\n            <FormGroup controlId=\"username-input\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter username\" name=\"username\" ref={register()}>\n                </Form.Control>\n            </FormGroup>\n            <Button variant=\"primary\" type=\"submit\" block>\n                Submit\n            </Button>\n        </Form>\n    );\n\n    const consoleForm = (\n        <Form onSubmit={handleSubmit(onSubmitConsole)}>\n            <FormGroup controlId=\"consol-loc\">\n                <Form.Label>Console Location</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Console Location\" name=\"location\" ref={register()}>\n                </Form.Control>\n            </FormGroup>\n            <FormGroup>\n                <Form.Label>Type</Form.Label>\n                <Form.Control as=\"select\" name=\"type\" ref={register()}>\n                    <option>Meeting Room</option>\n                    <option>Reactor</option>\n                </Form.Control>\n            </FormGroup>\n            <Button variant=\"primary\" type=\"submit\" block>\n                Submit\n            </Button>\n        </Form>\n    )\n\n    function InputForm(props) {\n        if (props.mode == '1') {\n            return playerForm;\n        } else if (props.mode == '2') {\n            return consoleForm;\n        }\n    }\n\n\n    return (\n        <Container>\n        <Jumotron className=\"Login-jumbo\">\n            <h1 className=\"App-header\">Real-Life Among Us</h1>\n            <ButtonGroup toggle>\n                {\n                    radios.map((radio, idx) => (\n                        <ToggleButton\n                            key={idx}\n                            variant=\"secondary\"\n                            type=\"radio\"\n                            value={radio.value}\n                            checked={inputMode === radio.value}\n                            onChange={(e) => setInputMode(e.currentTarget.value)}\n                        >\n                            {radio.name}\n                        </ToggleButton>\n                    ))\n                }\n            </ButtonGroup>\n            <InputForm mode={inputMode}/>\n\n        </Jumotron>\n\n            {/* username taken error */}\n            <Modal show={showError} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Error   \n                    </Modal.Title>\n                    </Modal.Header>\n                        <Modal.Body>\n                            {errorMessage}\n                        </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Ok\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        \n        </Container>\n    );\n}\n\nexport default Login;",["148","149"],"/home/darentang/projects/real-life-among-us/frontend/app/src/components/Dev.js",["150","151","152"],"import React, { useEffect, useState, useContext } from \"react\";\n// import io from 'socket.io-client';\nimport io from 'socket.io-client';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nimport SocketContext from '../utilities/socket-context'\n\nimport {\n    DisplayConsoleList, \n    DisplayPlayerListDebug, \n    DisplayGameSettings,\n    EditGameSettings,\n    BlockModal,\n    DisplayTasks\n} from \"../utilities/lobbies.js\"\n\n\nfunction Dev() {\n    // player list state\n    const [playerList, setPlayerList] = useState([]);\n    const [consoleList, setConsoleList] = useState([]);\n    const [taskList, setTaskList] = useState([]);\n    const [gameSettings, setGameSettings] = useState(null);\n    const [gameState, setGameState] = useState(\"\");\n\n    \n    // const token = fromCookie('game-token');\n    const token = 'dev';\n\n    const socket = useContext(SocketContext);\n    \n    useEffect(() => {\n        socket.emit(\"go online\", {token: token});\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"lobby update dev\", (data) => {\n            // update list\n            console.log(data);\n            setPlayerList(data.users);\n            setConsoleList(data.consoles);\n            setGameSettings(data.game_settings);\n            setGameState(data.game_state);\n            setTaskList(data.tasks);\n        });\n    });\n    \n    \n\n    return(\n        <Container>\n            <h1>Dev</h1>\n            <h4>Debug Tools</h4>\n            <Row>\n                <Col>\n                    <Button onClick={() => {\n                        let socket = io(\"http://192.168.0.30:5000\");\n                        socket.on('connect', function() {\n                            socket.emit('test', {data: 'Im connected!'});\n                        });\n                    }}>\n                        API Test\n                    </Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => {\n                        // request options\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({token: token, duration: 0})\n                        };\n\n                        // send request to api\n                        fetch(sessionStorage.getItem('api-host')+'api/start_game', requestOptions);\n                    }}>\n                        Start Game\n                    </Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => {\n                        // request options\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({token: token, state: 'game'})\n                        };\n\n                        // send request to api\n                        fetch(sessionStorage.getItem('api-host')+'api/change_state', requestOptions);\n                    }}>\n                        Set Game\n                    </Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => {\n                        // request options\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({token: token, state: 'lobby'})\n                        };\n\n                        // send request to api\n                        fetch(sessionStorage.getItem('api-host')+'api/change_state', requestOptions);\n                    }}>\n                        Set Lobby\n                    </Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => {\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({token: token})\n                        };\n\n                        fetch(sessionStorage.getItem('api-host')+'api/reset', requestOptions);\n                    }}>\n                        Reset\n                    </Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => {\n                        const requestOptions = {\n                            method: 'GET'\n                        };\n\n                        fetch(sessionStorage.getItem('api-host')+'api/populate', requestOptions);\n                    }}>\n                        Populate\n                    </Button>\n                </Col>\n                <Col>\n                    Game State: {gameState}\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <h4>Players</h4>\n                    <DisplayPlayerListDebug list={playerList} editable={true} className=\"Lobby-table\"/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <h4>Consoles</h4>\n                    <DisplayConsoleList list={consoleList} editable={true} debug={true} className=\"Lobby-table\"/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <h4>Tasks</h4>\n                    <DisplayTasks task={taskList}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <h4>Game Settings</h4>\n                    <DisplayGameSettings settings={gameSettings}/>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n}\n\n\nexport default Dev;","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Lobby.js",["153","154","155","156","157","158"],"import React, { useEffect, useState, useContext } from \"react\";\n// import io from 'socket.io-client';\nimport io from 'socket.io-client';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {DisplayPlayerList, DisplayGameSettings, BlockModal} from \"../utilities/lobbies.js\"\nimport SocketContext from '../utilities/socket-context'\n\nfunction Lobby() {\n    // player list state\n    const [playerList, setPlayerList] = useState([]);\n    const [gameSettings, setGameSettings] = useState(null);\n    const [playerName, setPlayerName] = useState('');\n    const [dead, setDead] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [countDown, setCountDown] = useState({time: null, countdown: null});\n    const [gameState, setGameState] = useState('');\n    const [remain ,setRemain] = useState(0);\n    \n    // const token = fromCookie('game-token');\n    const token = sessionStorage.getItem('game-token');\n    const history = useHistory();\n\n    // no token then return to homepage\n    if (token == null) {\n        history.push('/');\n    }\n\n    // let socket;\n    const socket = useContext(SocketContext);\n    \n    useEffect(() => {\n        socket.emit(\"go online\", {token: token, class: 'player'});\n    }, []);\n\n    useEffect(() => {\n        // when receiving a lobby list, update playerList state.\n        // If not successful, return to home page.\n        socket.on(\"lobby update\", (data) => {\n            if (data.success){\n                // update list\n                console.log(data);\n                setPlayerList(data.users);\n                for (const i in data.users) {\n                    if (data.users[i].token == token) {\n                        setPlayerName(data.users[i].name);\n                        setDead(data.users[i].dead);\n                        break;\n                    }\n                }\n                setGameSettings(data.game_settings);\n                setGameState(data.game_state);\n            } else {\n                // not authorised, return to index\n                history.push('/');\n            }\n        });\n    });\n\n\n    useEffect(() => {\n        if (socket){\n            socket.on('change state', (data) => {\n                if (data.state == 'game'){\n                    history.push('/game');\n                }\n            });\n        }\n    });\n\n    useEffect(() => {\n        let timer;\n        if (socket){\n            socket.on(\"start game\", (data) => {\n                setCountDown(data);\n                setShowModal(true);\n            });\n        }\n\n        // calculate time until\n        if (countDown.time != null && remain >= 0){\n            timer = setInterval(()=>{\n                const timeUntil = countDown.time + countDown.countdown*1000 - Date.now();  \n                setRemain(Math.max(Math.floor(timeUntil / 1000), 0));\n            }, 500);\n        }\n        \n        return () => clearInterval(timer);\n    }, [remain, countDown]);\n\n\n    return(\n        <Container>\n            <Jumbotron className=\"Login-jumbo\">\n                <h1>Lobby</h1>\n                <div>\n                    Your name is {playerName}.\n                    {dead &&\n                        <div>\n                            <p>You are dead :(</p>\n                        </div>\n                    }\n                    { (gameState == \"game\" && !dead) &&\n                        <div>\n                            <p>\n                            Looks like the game has started. Press the button below to join game.\n                            </p>\n                            <Button onClick={() => history.push('/game')}>\n                                Join\n                            </Button>\n                            \n                        </div>\n\n                    }\n                </div>\n            </Jumbotron>\n            <h4>Players</h4>\n            <DisplayPlayerList list={playerList} className=\"Lobby-table\"/>\n            <h4>Game Settings</h4>\n            <DisplayGameSettings settings={gameSettings}/>\n            <BlockModal show={showModal} remainingTime={remain} countDown={countDown}/>\n        </Container>\n    );\n}\n\n\nexport default Lobby;","/home/darentang/projects/real-life-among-us/frontend/app/src/components/Connect.js",["159","160","161"],{"ruleId":"162","severity":1,"message":"163","line":29,"column":8,"nodeType":"164","endLine":29,"endColumn":10,"suggestions":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":30,"column":9,"nodeType":"172","messageId":"173","endLine":30,"endColumn":16},{"ruleId":"162","severity":1,"message":"174","line":38,"column":6,"nodeType":"164","endLine":38,"endColumn":15,"suggestions":"175"},{"ruleId":"166","replacedBy":"176"},{"ruleId":"168","replacedBy":"177"},{"ruleId":"162","severity":1,"message":"178","line":84,"column":8,"nodeType":"164","endLine":84,"endColumn":10,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":106,"column":23,"nodeType":"182","messageId":"183","endLine":106,"endColumn":25},{"ruleId":"162","severity":1,"message":"174","line":129,"column":8,"nodeType":"164","endLine":129,"endColumn":27,"suggestions":"184"},{"ruleId":"180","severity":1,"message":"181","line":137,"column":28,"nodeType":"182","messageId":"183","endLine":137,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":148,"column":28,"nodeType":"182","messageId":"183","endLine":148,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":183,"column":28,"nodeType":"182","messageId":"183","endLine":183,"endColumn":30},{"ruleId":"180","severity":1,"message":"185","line":201,"column":24,"nodeType":"182","messageId":"183","endLine":201,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":212,"column":24,"nodeType":"182","messageId":"183","endLine":212,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":226,"column":78,"nodeType":"182","messageId":"183","endLine":226,"endColumn":80},{"ruleId":"180","severity":1,"message":"181","line":230,"column":80,"nodeType":"182","messageId":"183","endLine":230,"endColumn":82},{"ruleId":"180","severity":1,"message":"181","line":278,"column":33,"nodeType":"182","messageId":"183","endLine":278,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":284,"column":36,"nodeType":"182","messageId":"183","endLine":284,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":293,"column":18,"nodeType":"182","messageId":"183","endLine":293,"endColumn":20},{"ruleId":"180","severity":1,"message":"185","line":318,"column":48,"nodeType":"182","messageId":"183","endLine":318,"endColumn":50},{"ruleId":"180","severity":1,"message":"185","line":379,"column":39,"nodeType":"182","messageId":"183","endLine":379,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":379,"column":76,"nodeType":"182","messageId":"183","endLine":379,"endColumn":78},{"ruleId":"162","severity":1,"message":"186","line":386,"column":8,"nodeType":"164","endLine":386,"endColumn":10,"suggestions":"187"},{"ruleId":"180","severity":1,"message":"185","line":425,"column":30,"nodeType":"182","messageId":"183","endLine":425,"endColumn":32},{"ruleId":"180","severity":1,"message":"181","line":434,"column":24,"nodeType":"182","messageId":"183","endLine":434,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":434,"column":46,"nodeType":"182","messageId":"183","endLine":434,"endColumn":48},{"ruleId":"180","severity":1,"message":"181","line":434,"column":68,"nodeType":"182","messageId":"183","endLine":434,"endColumn":70},{"ruleId":"180","severity":1,"message":"181","line":436,"column":27,"nodeType":"182","messageId":"183","endLine":436,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":440,"column":27,"nodeType":"182","messageId":"183","endLine":440,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":445,"column":25,"nodeType":"182","messageId":"183","endLine":445,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":445,"column":61,"nodeType":"182","messageId":"183","endLine":445,"endColumn":63},{"ruleId":"180","severity":1,"message":"181","line":465,"column":25,"nodeType":"182","messageId":"183","endLine":465,"endColumn":27},{"ruleId":"180","severity":1,"message":"185","line":465,"column":61,"nodeType":"182","messageId":"183","endLine":465,"endColumn":63},{"ruleId":"162","severity":1,"message":"188","line":52,"column":8,"nodeType":"164","endLine":52,"endColumn":22,"suggestions":"189"},{"ruleId":"180","severity":1,"message":"181","line":120,"column":47,"nodeType":"182","messageId":"183","endLine":120,"endColumn":49},{"ruleId":"180","severity":1,"message":"181","line":122,"column":53,"nodeType":"182","messageId":"183","endLine":122,"endColumn":55},{"ruleId":"180","severity":1,"message":"181","line":142,"column":40,"nodeType":"182","messageId":"183","endLine":142,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":143,"column":40,"nodeType":"182","messageId":"183","endLine":143,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":150,"column":28,"nodeType":"182","messageId":"183","endLine":150,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":174,"column":40,"nodeType":"182","messageId":"183","endLine":174,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":174,"column":68,"nodeType":"182","messageId":"183","endLine":174,"endColumn":70},{"ruleId":"180","severity":1,"message":"181","line":189,"column":48,"nodeType":"182","messageId":"183","endLine":189,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":189,"column":76,"nodeType":"182","messageId":"183","endLine":189,"endColumn":78},{"ruleId":"180","severity":1,"message":"181","line":201,"column":28,"nodeType":"182","messageId":"183","endLine":201,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":201,"column":56,"nodeType":"182","messageId":"183","endLine":201,"endColumn":58},{"ruleId":"180","severity":1,"message":"181","line":234,"column":28,"nodeType":"182","messageId":"183","endLine":234,"endColumn":30},{"ruleId":"180","severity":1,"message":"185","line":251,"column":35,"nodeType":"182","messageId":"183","endLine":251,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":254,"column":35,"nodeType":"182","messageId":"183","endLine":254,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":266,"column":40,"nodeType":"182","messageId":"183","endLine":266,"endColumn":42},{"ruleId":"180","severity":1,"message":"185","line":273,"column":43,"nodeType":"182","messageId":"183","endLine":273,"endColumn":45},{"ruleId":"180","severity":1,"message":"181","line":290,"column":43,"nodeType":"182","messageId":"183","endLine":290,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":313,"column":9,"nodeType":"172","messageId":"192","endLine":313,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":377,"column":27,"nodeType":"182","messageId":"183","endLine":377,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":472,"column":27,"nodeType":"182","messageId":"183","endLine":472,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":510,"column":27,"nodeType":"182","messageId":"183","endLine":510,"endColumn":29},{"ruleId":"180","severity":1,"message":"181","line":580,"column":22,"nodeType":"182","messageId":"183","endLine":580,"endColumn":24},{"ruleId":"170","severity":1,"message":"193","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":10},{"ruleId":"180","severity":1,"message":"185","line":59,"column":33,"nodeType":"182","messageId":"183","endLine":59,"endColumn":35},{"ruleId":"162","severity":1,"message":"194","line":64,"column":8,"nodeType":"164","endLine":64,"endColumn":10,"suggestions":"195"},{"ruleId":"162","severity":1,"message":"196","line":66,"column":5,"nodeType":"172","endLine":66,"endColumn":14,"suggestions":"197"},{"ruleId":"180","severity":1,"message":"185","line":71,"column":36,"nodeType":"182","messageId":"183","endLine":71,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":78,"column":35,"nodeType":"182","messageId":"183","endLine":78,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":89,"column":32,"nodeType":"182","messageId":"183","endLine":89,"endColumn":34},{"ruleId":"180","severity":1,"message":"181","line":101,"column":35,"nodeType":"182","messageId":"183","endLine":101,"endColumn":37},{"ruleId":"180","severity":1,"message":"185","line":106,"column":35,"nodeType":"182","messageId":"183","endLine":106,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":191,"column":37,"nodeType":"182","messageId":"183","endLine":191,"endColumn":39},{"ruleId":"180","severity":1,"message":"181","line":211,"column":38,"nodeType":"182","messageId":"183","endLine":211,"endColumn":40},{"ruleId":"162","severity":1,"message":"194","line":380,"column":8,"nodeType":"164","endLine":380,"endColumn":10,"suggestions":"198"},{"ruleId":"180","severity":1,"message":"181","line":384,"column":33,"nodeType":"182","messageId":"183","endLine":384,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":386,"column":39,"nodeType":"182","messageId":"183","endLine":386,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":388,"column":39,"nodeType":"182","messageId":"183","endLine":388,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":404,"column":28,"nodeType":"182","messageId":"183","endLine":404,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":406,"column":34,"nodeType":"182","messageId":"183","endLine":406,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":408,"column":34,"nodeType":"182","messageId":"183","endLine":408,"endColumn":36},{"ruleId":"180","severity":1,"message":"185","line":467,"column":42,"nodeType":"182","messageId":"183","endLine":467,"endColumn":44},{"ruleId":"166","replacedBy":"199"},{"ruleId":"168","replacedBy":"200"},{"ruleId":"170","severity":1,"message":"201","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"180","severity":1,"message":"181","line":112,"column":35,"nodeType":"182","messageId":"183","endLine":112,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":114,"column":43,"nodeType":"182","messageId":"183","endLine":114,"endColumn":45},{"ruleId":"162","severity":1,"message":"186","line":120,"column":8,"nodeType":"164","endLine":120,"endColumn":10,"suggestions":"202"},{"ruleId":"180","severity":1,"message":"181","line":159,"column":24,"nodeType":"182","messageId":"183","endLine":159,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":161,"column":31,"nodeType":"182","messageId":"183","endLine":161,"endColumn":33},{"ruleId":"166","replacedBy":"203"},{"ruleId":"168","replacedBy":"204"},{"ruleId":"170","severity":1,"message":"205","line":16,"column":5,"nodeType":"172","messageId":"173","endLine":16,"endColumn":21},{"ruleId":"170","severity":1,"message":"206","line":17,"column":5,"nodeType":"172","messageId":"173","endLine":17,"endColumn":15},{"ruleId":"162","severity":1,"message":"174","line":38,"column":8,"nodeType":"164","endLine":38,"endColumn":10,"suggestions":"207"},{"ruleId":"170","severity":1,"message":"193","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":10},{"ruleId":"162","severity":1,"message":"178","line":38,"column":8,"nodeType":"164","endLine":38,"endColumn":10,"suggestions":"208"},{"ruleId":"180","severity":1,"message":"181","line":49,"column":45,"nodeType":"182","messageId":"183","endLine":49,"endColumn":47},{"ruleId":"180","severity":1,"message":"181","line":68,"column":32,"nodeType":"182","messageId":"183","endLine":68,"endColumn":34},{"ruleId":"162","severity":1,"message":"174","line":93,"column":8,"nodeType":"164","endLine":93,"endColumn":27,"suggestions":"209"},{"ruleId":"180","severity":1,"message":"181","line":107,"column":34,"nodeType":"182","messageId":"183","endLine":107,"endColumn":36},{"ruleId":"170","severity":1,"message":"210","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"201","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"180","severity":1,"message":"181","line":26,"column":26,"nodeType":"182","messageId":"183","endLine":26,"endColumn":28},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["211"],"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["214"],["212"],["213"],"React Hook useEffect has missing dependencies: 'socket' and 'token'. Either include them or remove the dependency array.",["215"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["216"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'expiry'. Either include it or remove the dependency array.",["218"],"no-const-assign","'editable' is constant.","const","'io' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'socket', and 'token'. Either include them or remove the dependency array.",["219"],"React Hook useEffect contains a call to 'setDisable'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [socket, tally.tally, profile.id] as a second argument to the useEffect Hook.",["220"],["221"],["212"],["213"],"'useContext' is defined but never used.",["222"],["212"],["213"],"'EditGameSettings' is defined but never used.","'BlockModal' is defined but never used.",["223"],["224"],["225"],"'useEffect' is defined but never used.",{"desc":"226","fix":"227"},"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"238","fix":"242"},{"desc":"234","fix":"243"},{"desc":"244","fix":"245"},{"desc":"230","fix":"246"},{"desc":"232","fix":"247"},"Update the dependencies array to be: [history]",{"range":"248","text":"249"},"Update the dependencies array to be: [address, socket]",{"range":"250","text":"251"},"Update the dependencies array to be: [socket, token]",{"range":"252","text":"253"},"Update the dependencies array to be: [remain, countDown, socket]",{"range":"254","text":"255"},"Update the dependencies array to be: [history, token]",{"range":"256","text":"257"},"Update the dependencies array to be: [expiry, props.expiry]",{"range":"258","text":"259"},"Update the dependencies array to be: [history, socket, token]",{"range":"260","text":"261"},"Add dependencies array: [socket, tally.tally, profile.id]",{"range":"262","text":"263"},{"range":"264","text":"261"},{"range":"265","text":"257"},"Update the dependencies array to be: [socket]",{"range":"266","text":"267"},{"range":"268","text":"253"},{"range":"269","text":"255"},[974,976],"[history]",[1005,1014],"[address, socket]",[2504,2506],"[socket, token]",[3839,3858],"[remain, countDown, socket]",[13899,13901],"[history, token]",[1559,1573],"[expiry, props.expiry]",[2133,2135],"[history, socket, token]",[2708,2708],", [socket, tally.tally, profile.id]",[15001,15003],[3982,3984],[1068,1070],"[socket]",[1377,1379],[3050,3069]]